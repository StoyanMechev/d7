<?php
/**
 * Implements hook_node_info()
 */
function fctl_sf_node_info() {
  return array(
    'fctl_sf_page' => array(
      'name' => t('FCTL-75 page'),
      'base' => 'fctl_sf_page',
      'description' => t('Custom node type created for task FCTL-75'),
      'has_title' => TRUE,
      'title_label' => t('Title')
    )
  );
}

/**
* Implements hook_menu().
*/
function fctl_sf_menu() {
  $items['fctl_sf_page'] = array(
    'title' => 'Test page',
    'page callback' => 'fctl_sf_create_custom_page',
    'access callback' => 'fctl_sf_access_control',
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,  
  );
  $items['fctl_sf/form'] = array(
    'title' => 'Test form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fctl_sf_test_form'),
    'access callback' => 'fctl_sf_access_control',
    'description' => 'My form description',
    'file' => 'fctl_sf.test_form.inc',  
    'type' => MENU_NORMAL_ITEM,
    'weight' => -2,  
  );
  $items['show_submissions'] = array(
    'title' => 'Show submissions',
    'page callback' => 'fctl_sf_show_submissions',
    'access callback' => 'fctl_sf_access_control',
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,
  );
  $items['show_submissions_table'] = array(
    'title' => 'Show submissions in table',
    'page callback' => 'fctl_sf_show_submissions_table',
    'access callback' => 'fctl_sf_access_control',
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,
  );
   $items['user/%user/fctl'] = array(
    'title' => 'User\'s fctl submissions',
    'page callback' => 'fctl_sf_show_submissions_table_cu',
    'page arguments' => array(1),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'weight' => 9,
  );
  return $items;
}

/**
* Implements menu access callback.
*/
function fctl_sf_access_control(){
  return user_has_role(3);    
}

/**
* Creates custom page. Implements menu access callback.
*/
function fctl_sf_create_custom_page() {
  $content = array();
  $content['raw_markup'] = array(
    '#type' => 'markup',
    '#markup' => '<b>This is a custom test page'
  );
  return $content;
}

/**
* Shows all submissions in a table. Implements TableSort and PagerDefault.
*/
function fctl_sf_show_submissions_table() {
  // Define headers for table theme output and for sorting in db_select.
  $header = array(
    array('data' => t('Submission ID'), 'field' => 'sid'),
    array('data' => t('Message'), 'field' => 'message'),
    array('data' => t('Submission date'), 'field' => 'date'),
    array('data' => t('Submitted by'), 'field' => 'name'),
  );
  $query = db_select('fctl_table1', 't1')->extend('PagerDefault')->extend('TableSort');
  $query->innerJoin('users', 'u', 't1.uid = u.uid');
  $query->addField('t1', 'date');
  $query->addField('t1', 'sid');
  $query->addField('t1', 'message');
  $query->addField('u', 'name');
  $query->orderByHeader($header);
  $query->limit(10);
  $result = $query->execute();
  $output = '';
  $rows = array();
  if(!empty($result)){
    foreach ($result as $record) {
      $record->date = date('d/m/Y H:i:s',$record->date);
      $rows[] = array(
        $record->sid,
        $record->message,
        $record->date,
        $record->name,
      //dsm($row);
      );
    }
  }
  $output .= theme(
    'table', 
    array('header' => $header, 'rows' =>$rows,)
    ); //theme as table
   $output .= theme('pager');
  //echo $output;
  return $output;
}

/**
*  Shows current user's submissions in a table.
*/
function fctl_sf_show_submissions_table_cu($cuid) {
  // Define headers for table theme output and for sorting in db_select.
  dsm($cuid);
  $header = array(
    array('data' => t('Submission ID'), 'field' => 'sid'),
    array('data' => t('Message'), 'field' => 'message'),
    array('data' => t('Submission date'), 'field' => 'date'),
    array('data' => t('Submitted by'), 'field' => 'name'),
  );
  $query = db_select('fctl_table1', 't1')->extend('PagerDefault')->extend('TableSort');
  $query->innerJoin('users', 'u', 't1.uid = u.uid');
  $query->addField('t1', 'date');
  $query->addField('t1', 'sid');
  $query->addField('t1', 'message');
  $query->addField('u', 'name');
  $query->condition('t1.uid',$cuid->uid);
  $query->orderByHeader($header);
  $query->limit(10);
  $result = $query->execute();
  $output = '';
  $rows = array();
  if(!empty($result)){
    foreach ($result as $record) {
      $record->date = date('d/m/Y H:i:s',$record->date);
      $rows[] = array(
        $record->sid,
        $record->message,
        $record->date,
        $record->name,
      //dsm($row);
      );
    }
  }
  $output .= theme(
    'table', 
    array('header' => $header, 'rows' =>$rows,)
    ); //theme as table
   $output .= theme('pager');
  //echo $output;
  return $output;
}

/**
*  Shows all submissions. Implements only PagerDefault.
*/
function fctl_sf_show_submissions() {

  $query = db_select('fctl_table1', 't1')->extend('PagerDefault');
  $query->innerJoin('users', 'u', 't1.uid = u.uid');
  $query->addField('t1', 'date');
  $query->addField('t1', 'sid');
  $query->addField('t1', 'message');
  $query->addField('u', 'name');
  $result = $query->execute();
  $output = '';
  foreach ($result as $row) {
    $row->date = date('d/m/Y H:i:s',$row->date);
    $output .= $row->sid . ' '
      . $row->message . ' '
      . $row->date . ' ' 
      . $row->name . "<br>";
    //dsm($row);
  }
  $output .= theme('pager');
  //echo $output;
  return render($output);
}

function fctl_sf_page_permission() {
  return array(
    'create FCTL-75 page' => array(
      'title' => t('Create a FCTL-75 page'),
      'description' => t('Create a FCTL-75 page'),
    ),
    'access FCTL-75 page' => array(
      'title' => t('View FCTL-75 page'),
      'description' => t('View FCTL-75 page'),
    ),
    'edit any FCTL-75 page' => array(
      'title' => t('Edit any FCTL-75 page'),
      'description' => t('Edit any FCTL-75 page'),
    ),
    'delete any FCTL-75 page' => array(
      'title' => t('Delete any FCTL-75 page'),
      'description' => t('Delete any FCTL-75 page'),
    ),
  );   
}


        
/**
* Implements hook_node_access().
 */
function fctl_sf_node_access($node, $op, $account){
  $type = is_string($node) ? $node : $node->type;
  $accrole = implode($account->roles);
  if ($type == 'fctl_sf_page' && $accrole == 'administrator'){
    return NODE_ACCESS_ALLOW;
  }
  else{        
    return NODE_ACCESS_DENY;
  }
}