<?php

/** 
 *  
 */

/**
 * Implements hook_node_info()
 */
function fctl_sf_node_info() {
  return array(
    'fctl_sf_page' => array(
      'name' => t('FCTL-75 page'),
      'base' => 'fctl_sf_page',
      'description' => t('Custom node type created for task FCTL-75'),
      'has_title' => TRUE,
      'title_label' => t('Title')
    )
  );
}

/**
 * Implement hook_form()
 */
function fctl_sf_page_form($node, $form_state) {
  krumo($node);  
  return node_content_form($node, $form_state);
}
/**
* Implementation of hook_menu().
*/
function fctl_sf_menu() {
  $items['fctl_sf_page'] = array(
    'title' => 'Test page',
    'page callback' => 'fctl_sf_create_ftcl_page',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,  
  );
//  $items['fctl_sf1'] = array(
//    'title' => 'Create FCTL user',
//    'page callback' => 'fctl_sf_create_ftcl_user',
//    'access callback' => TRUE,
//    'type' => MENU_NORMAL_ITEM,
//    'weight' => -2,  
//  );
  return $items;
}

/**
* Page callback.
*/
function fctl_sf_create_ftcl_page() {
  $content = "This is a custom test page";
  return $content;
//Creatin a new Drupal node  
//  global $user;
/**  $node = new stdClass();
//  $node->title = "Hello World custom page";
//  $node->type = "fctl_sf_page";
//  // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
//  node_object_prepare($node); 
//  // Or e.g. 'en' if locale is enabled.
//  $node->language = LANGUAGE_NONE; 
//  $node->uid = $user->uid; 
//  // Status is 1 or 0; published or not.
//  $node->status = 1; 
//  // Promote is 1 or 0; promoted to front page or not.
//  $node->promote = 1; 
//  // Comment is 0, 1, 2; 0 = disabled, 1 = read only, or 2 = read/write.
//  $node->comment = 1; 
//
//  // Text field
//  $node->body = t("This is a custom test page 123");
//  
//  $node = node_submit($node); // Prepare node for saving
//  node_save($node);
//
//  krumo($node);
//  return "Custom page added";
 * 
 */
}

function fctl_sf_create_ftcl_user() {
  return "New User added";  
}

/**
* Implements hook_permission().
*/
function fctl_sf_page_permission() {
  return array(
    'create FCTL-75 page' => array(
      'title' => t('Create a FCTL-75 page'),
      'description' => t('Create a FCTL-75 page'),
    ),
    'edit own job post' => array(
      'title' => t('Edit own FCTL-75 page'),
      'description' => t('Edit your own FCTL-75 page'),
    ),
    'edit any FCTL-75 page' => array(
      'title' => t('Edit any FCTL-75 page'),
      'description' => t('Edit any FCTL-75 page'),
    ),
    'delete own FCTL-75 page' => array(
      'title' => t('Delete own FCTL-75 page'),
      'description' => t('Delete own FCTL-75 page'),
    ),
    'delete any FCTL-75 page' => array(
      'title' => t('Delete any FCTL-75 page'),
      'description' => t('Delete any FCTL-75 page'),
    ),
  );
}

/**
* Implements hook_node_access().
*/
function fctl_sf_page_node_access($op, $node, $account) {  
  $is_author = $account->uid == $node->uid;
  switch ($op) {
    case 'create':
      // Allow if user's role has 'create joke' permission.
      if (user_access('create FCTL-75 page', $account)) {
        print_r($op);  
        return NODE_ACCESS_ALLOW;
      }
      
    case 'update':
      // Allow if user's role has 'edit own joke' permission and user is
      // the author; or if the user's role has 'edit any joke' permission.
      if (user_access('edit own job', $account) && $is_author ||
          user_access('edit any job', $account)) {
            return NODE_ACCESS_ALLOW;
      }
    
    case 'delete':
      // Allow if user's role has 'delete own joke' permission and user is
      // the author; or if the user's role has 'delete any joke' permission.
      if (user_access('delete own job', $account) && $is_author ||
          user_access('delete any job', $account)) {
            return NODE_ACCESS_ALLOW;
      }
  }
}