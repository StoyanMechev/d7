<?php

/** 
 *  
 */

/**
 * Implements hook_node_info()
 */
function fctl_sf_node_info() {
  return array(
    'fctl_sf_page' => array(
      'name' => t('FCTL-75 page'),
      'base' => 'fctl_sf_page',
      'description' => t('Custom node type created for task FCTL-75'),
      'has_title' => TRUE,
      'title_label' => t('Title')
    )
  );
}

/**
* Implementation of hook_menu().
*/
function fctl_sf_menu() {
  $items['fctl_sf_page'] = array(
    'title' => 'Test page',
    'page callback' => 'fctl_sf_create_ftcl_page',
    'access callback' => 'fctl_sf_access_control',
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,  
  );
  $items['fctl_sf/form'] = array(
    'title' => 'Test form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fctl_sf_test_form'),
    'access callback' => 'fctl_sf_access_control',
    'description' => 'My form description',
    'file' => 'fctl_sf.test_form.inc',  
    'type' => MENU_NORMAL_ITEM,
    'weight' => -2,  
  );
  $items['show_submissions'] = array(
    'title' => 'Show submissions',
    'page callback' => 'fctl_sf_show_submissions',
    'access callback' => 'fctl_sf_access_control',
    'type' => MENU_NORMAL_ITEM,
    'weight' => -1,
  );
  return $items;
}

/**
* Access callback.
*/
function fctl_sf_access_control(){
  return user_has_role(3);    
}

/**
* Page callback.
*/
function fctl_sf_create_ftcl_page() {
  $content = "This is a custom test page";
  return $content;
}
/**
* Page callback db_test.
*/
function fctl_sf_show_submissions() {
  $query = db_select('fctl_table1', 't1')->extend('PagerDefault');
  $query
  ->fields('t1', array('message'))
  ->limit(10);
  $result = $query->execute();
  $output = '';
  foreach ($result as $row) {
    $output .= $row->message . "<br>";
  }
  $output .= theme('pager');
  print $output;
  return;
 
}

/**
* Implements hook_permission().
 * function comment_permission() {
  return array(
    'administer comments' => array(
      'title' => t('Administer comments and comment settings'),
    ),
    'access comments' => array(
      'title' => t('View comments'),
    ),
    'post comments' => array(
      'title' => t('Post comments'),
    ),
    'skip comment approval' => array(
      'title' => t('Skip comment approval'),
    ),
    'edit own comments' => array(
      'title' => t('Edit own comments'),
    ),
  );
}
*/
function fctl_sf_page_permission() {
  return array(
    'create FCTL-75 page' => array(
      'title' => t('Create a FCTL-75 page'),
      'description' => t('Create a FCTL-75 page'),
    ),
    'access FCTL-75 page' => array(
      'title' => t('View FCTL-75 page'),
      'description' => t('View FCTL-75 page'),
    ),
    'edit any FCTL-75 page' => array(
      'title' => t('Edit any FCTL-75 page'),
      'description' => t('Edit any FCTL-75 page'),
    ),
    'delete own FCTL-75 page' => array(
      'title' => t('Delete own FCTL-75 page'),
      'description' => t('Delete own FCTL-75 page'),
    ),
    'delete any FCTL-75 page' => array(
      'title' => t('Delete any FCTL-75 page'),
      'description' => t('Delete any FCTL-75 page'),
    ),
  );
}

/**
 * Implements hook_node_type_update()
 */
function fctl_sf_page_node_type_update() {
  $permissions = array('NODE_ACCESS_DENY');
  foreach(array('anonymous user', 'authenticated user') as $role_name) {
    $role = user_role_load_by_name($role_name);
    user_role_grant_permissions($role->rid, $permissions);
  //  dcm($role);
  }
}

        
/**
* Implements hook_node_access().

function fctl_sf_node_access($node, $op, $account){
  $type = is_string($node) ? $node : $node->type;
  $accrole = implode($account->roles);
  if ($type == 'fctl_sf_page' && $accrole == 'administrator'){
    return NODE_ACCESS_ALLOW;
  }
  else{        
    return NODE_ACCESS_DENY;
  }
}
 */